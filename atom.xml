<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘养硕的博客</title>
  
  <subtitle>记录工作和学习的点点滴滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liuyangshuo.com/"/>
  <updated>2018-10-13T08:57:14.669Z</updated>
  <id>http://liuyangshuo.com/</id>
  
  <author>
    <name>刘养硕</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客搭建笔记</title>
    <link href="http://liuyangshuo.com/2018/10/13/hexo_and_markdown/"/>
    <id>http://liuyangshuo.com/2018/10/13/hexo_and_markdown/</id>
    <published>2018-10-13T07:46:00.000Z</published>
    <updated>2018-10-13T08:57:14.669Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><hr><ul><li>本博客记录了我在搭建好我的博客网站后遇到的一些问题，以免日后遇到相同问题又要到处搜索，如果遇到和我相同问题的朋友也可以用作参考</li><li>在这里我将博客网站和博文的问题放在一篇文章中来统一介绍</li></ul><hr><a id="more"></a><h3 id="网站配置和主题配置"><a href="#网站配置和主题配置" class="headerlink" title="网站配置和主题配置"></a>网站配置和主题配置</h3><h4 id="博客网站配置"><a href="#博客网站配置" class="headerlink" title="博客网站配置"></a>博客网站配置</h4><hr><ul><li>找到hexo博客所在目录，打开配置文件。下面是我所修改的一些内容,如果没有可以自己添加：</li><li>title：刘养硕的博客 //标题</li><li>subtitle: 记录工作和学习的点点滴滴  //副标题</li><li>description: 快乐生活，快乐学习 //描述</li><li>author: 刘养硕  //博主</li><li>language: zh_CN //中文语言，默认为英文，这个还要看你主题所支持的语言</li><li>还可以有keywords等选项，我的博客里面不显示就没有加</li><li>这里进行一下说明，在我打算修改博客为中文时（默认为英文），博客显示的语言不稳定，有时是英文，有时是中文，还有时会出现中文繁体，因此我没有在配置文件中修改语言选项（也就是language）。我修改的是主题文件夹下所支持的语言文件：进入到themes\aria\languages目录（aria是我所使用的主题），我对languages目录做了一下备份，然后将default.yml和zh_CN.yml以外的文件都删掉，最后修改defulet.yml中的内容为zh_CH.yml（默认为en.yml）</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;本博客记录了我在搭建好我的博客网站后遇到的一些问题，以免日后遇到相同问题又要到处搜索，如果遇到和我相同问题的朋友也可以用作参考&lt;/li&gt;
&lt;li&gt;在这里我将博客网站和博文的问题放在一篇文章中来统一介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="博客" scheme="http://liuyangshuo.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://liuyangshuo.com/tags/hexo/"/>
    
      <category term="markdown" scheme="http://liuyangshuo.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>C/C++知识总结之abs函数</title>
    <link href="http://liuyangshuo.com/2018/10/10/C++_abs/"/>
    <id>http://liuyangshuo.com/2018/10/10/C++_abs/</id>
    <published>2018-10-10T13:25:00.000Z</published>
    <updated>2018-10-11T14:48:48.708Z</updated>
    
    <content type="html"><![CDATA[<h3 id="abs函数"><a href="#abs函数" class="headerlink" title="abs函数"></a>abs函数</h3><hr><ul><li>abs函数存在于不止一个库中，使用哪个库中的abs函数就可以包含哪个头文件</li><li>其中在c标准库stdlib.h中abs函数只接受整型或长整型，在c98标准中参数类型可以是int或long int类型；c11标准中还可以是long long int类型</li><li>在数学函数库cmath/math.h中，在c++98标准中abs可接受的参数类型为double/float/long double；在c++11中还可以接受各种整型参数。abs还可以写成fabs，这两个用法是一样的，labs则只接受long int类型的参数。在c++11中头文件可以写cmath,c++98只能写math.h</li><li>abs函数的返回值和参数类型保持一致</li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;abs函数&quot;&gt;&lt;a href=&quot;#abs函数&quot; class=&quot;headerlink&quot; title=&quot;abs函数&quot;&gt;&lt;/a&gt;abs函数&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;abs函数存在于不止一个库中，使用哪个库中的abs函数就可以包含哪个头文件&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="C/C++" scheme="http://liuyangshuo.com/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://liuyangshuo.com/tags/C-C/"/>
    
      <category term="abs" scheme="http://liuyangshuo.com/tags/abs/"/>
    
  </entry>
  
  <entry>
    <title>git 学习</title>
    <link href="http://liuyangshuo.com/2018/10/06/git_command/"/>
    <id>http://liuyangshuo.com/2018/10/06/git_command/</id>
    <published>2018-10-06T09:53:11.000Z</published>
    <updated>2018-10-13T08:14:55.812Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本库简介"><a href="#版本库简介" class="headerlink" title="版本库简介"></a>版本库简介</h3><hr><ul><li>cvs和svn都是集中式版本控制系统，git是分布式版本控制系统</li><li>集中式一旦中央服务器坏掉，使用该版本库的所有员工都无法工作</li><li>而分布式每个人的电脑都相当于一个完整的版本库，无需联网一样工作，分布式交集中式的安全性要高很多</li><li>本文介绍git使用的一些常用的命令</li></ul><hr><a id="more"></a><p><img src="https://github.com/liuyangshuo/liuyangshuo.github.io/raw/master/img/git.jpg" alt="git数据传输指令"></p><h3 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"lys"</span></span><br><span class="line">$ git config --global user.email <span class="string">"liu_yangshuo@163.com"</span></span><br></pre></td></tr></table></figure><h3 id="git获取版本库"><a href="#git获取版本库" class="headerlink" title="git获取版本库"></a>git获取版本库</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> http://xxxxxx</span><br></pre></td></tr></table></figure><h3 id="git初始化一个新仓库"><a href="#git初始化一个新仓库" class="headerlink" title="git初始化一个新仓库"></a>git初始化一个新仓库</h3><p>新建一个文件夹，然后在文件夹下执行：<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></p><p>执行完命令就会在该文件夹下生成.git文件夹</p><h3 id="git代码提交流程"><a href="#git代码提交流程" class="headerlink" title="git代码提交流程"></a>git代码提交流程</h3><hr><ol><li>新建或修改文件</li><li>使用 git add 命令将文件添加到缓存区</li><li>使用 git commit 将修改文件提交到本地代码库</li><li>使用 git push 将本地文件同步到远程代码库</li></ol><hr><h3 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ git status  //使用该命令可以判断git代码提交流程执行到哪一步，该命令显示当前的状态信息</span><br><span class="line">$ git diff    //该命令会显示当前已修改但是还没加入缓存区的内容</span><br><span class="line">$ git diff --cached   //该命令显示使用git add加入到缓存区中的文件内容</span><br><span class="line">$ git commit -m <span class="string">"git log"</span>    //将加入到缓存区中的内容提交到本地版本库，</span><br><span class="line">$ git commit -a -m <span class="string">"git log"</span>  //如果不是用git add那么这个命令只会将修改的文件提交到版本库，不会提交新建文件</span><br><span class="line">$ git branch  //查看所有分支，以及当前所在分支</span><br><span class="line">$ git branch branch_01_01 //新建一个分支</span><br><span class="line">$ git checkout master //切换分支</span><br><span class="line">$ git merge -m <span class="string">'merge branch_01_01 branch'</span> branch_01_01    //将branch_01_01分支合并到当前分支</span><br><span class="line">$ git branch -d branch_01_01  //删除分支branch_01_01,该命令只能删除已经合并的分支，如果强制删除某个分支使用-D参数</span><br><span class="line">$ git reset --head HEAD^  //撤销合并的内容</span><br><span class="line">$ git <span class="built_in">log</span> //查看所有日志</span><br><span class="line">$ git <span class="built_in">log</span> v1.1... main.cpp /<span class="built_in">source</span> //该命令显示从v1.1开发<span class="built_in">source</span>目录下所有main.cpp文件的修改</span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span>  //该命令显示日志更详细的内容</span><br><span class="line">$ git <span class="built_in">log</span> --pretty=[online/medium/short/full/fuller/email/raw] //格式化日志输出</span><br><span class="line">$ git <span class="built_in">log</span> --graph --pretty=online   //--graph选项用来可视化日志</span><br><span class="line">$ git diff master <span class="built_in">test</span>  //比较分支<span class="built_in">test</span>和主线master的区别</span><br><span class="line">$ git diff <span class="built_in">test</span> //比较<span class="built_in">test</span>分支和当前分支的差别</span><br><span class="line">$ git diff <span class="built_in">test</span> file1   //比较分支<span class="built_in">test</span>中file1和当前分支file1的差别</span><br><span class="line">$ git diff <span class="built_in">test</span> --<span class="built_in">stat</span>  //统计都有哪些文件，哪些行有差别</span><br><span class="line">$ git tag tag-1 b1a2f004 //打一个名为tag-1的标签，b1a2f004为commit名称的前8位</span><br><span class="line">$ git tag -a tag-2 b1a2f004 -m <span class="string">"tag 2"</span>  //创建一个标签对象，并添加注释</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;版本库简介&quot;&gt;&lt;a href=&quot;#版本库简介&quot; class=&quot;headerlink&quot; title=&quot;版本库简介&quot;&gt;&lt;/a&gt;版本库简介&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;cvs和svn都是集中式版本控制系统，git是分布式版本控制系统&lt;/li&gt;
&lt;li&gt;集中式一旦中央服务器坏掉，使用该版本库的所有员工都无法工作&lt;/li&gt;
&lt;li&gt;而分布式每个人的电脑都相当于一个完整的版本库，无需联网一样工作，分布式交集中式的安全性要高很多&lt;/li&gt;
&lt;li&gt;本文介绍git使用的一些常用的命令&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://liuyangshuo.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="http://liuyangshuo.com/tags/git/"/>
    
      <category term="开发工具" scheme="http://liuyangshuo.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://liuyangshuo.com/2018/06/14/hello-world/"/>
    <id>http://liuyangshuo.com/2018/06/14/hello-world/</id>
    <published>2018-06-14T13:55:27.279Z</published>
    <updated>2018-06-14T13:55:27.279Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
